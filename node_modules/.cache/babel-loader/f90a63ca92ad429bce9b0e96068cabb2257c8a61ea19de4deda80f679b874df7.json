{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sibabalom\\\\Videos\\\\KotaRepoApp\\\\Kota-app\\\\src\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport FilterButton from \"../components/FilterButton\";\nimport Form from \"../components/Form\";\nimport Todo from \"../components/Todo\";\nimport React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n_c = FILTER_NAMES;\nfunction Dashboard(props) {\n  _s();\n  const [filter, setFilter] = useState(\"All\");\n  const [tasks, setTasks] = useState(props.tasks || []);\n  function addTask(name) {\n    const newTask = {\n      id: `todo-${nanoid()}`,\n      name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {\n          ...task,\n          name: newName\n        };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this));\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this));\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spaza Eats Kota Shop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: filterList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: headingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"dO5YWOlpx0jJkXcbmpvEqxbOdpo=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"FILTER_NAMES\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["FilterButton","Form","Todo","React","useState","nanoid","jsxDEV","_jsxDEV","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","_c","Dashboard","props","_s","filter","setFilter","tasks","setTasks","addTask","name","newTask","id","toggleTaskCompleted","updatedTasks","map","deleteTask","remainingTasks","editTask","newName","editedTaskList","taskList","fileName","_jsxFileName","lineNumber","columnNumber","filterList","isPressed","tasksNoun","length","headingText","className","children","role","_c2","$RefreshReg$"],"sources":["C:/Users/Sibabalom/Videos/KotaRepoApp/Kota-app/src/Dashboard/Dashboard.js"],"sourcesContent":["import FilterButton from \"../components/FilterButton\";\r\nimport Form from \"../components/Form\";\r\nimport Todo from \"../components/Todo\";\r\nimport React, { useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: (task) => !task.completed,\r\n  Completed: (task) => task.completed,\r\n};\r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nfunction Dashboard(props) {\r\n  \r\n  const [filter, setFilter] = useState(\"All\");\r\n\r\n  const [tasks, setTasks] = useState(props.tasks || []);\r\n\r\n  function addTask(name) {\r\n    const newTask = { id: `todo-${nanoid()}`, name, completed: false };\r\n    setTasks([...tasks, newTask]);\r\n  }\r\n\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTasks = tasks.map((task) => {\r\n      // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        // use object spread to make a new object\r\n        // whose `completed` prop has been inverted\r\n        return { ...task, completed: !task.completed };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  }\r\n\r\n  function deleteTask(id) {\r\n    const remainingTasks = tasks.filter((task) => id !== task.id);\r\n    setTasks(remainingTasks);\r\n  }\r\n\r\n  function editTask(id, newName) {\r\n    const editedTaskList = tasks.map((task) => {\r\n      // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        //\r\n        return { ...task, name: newName };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(editedTaskList);\r\n  }\r\n\r\n  const taskList = tasks.map((task) => (\r\n    <Todo\r\n      id={task.id}\r\n      name={task.name}\r\n      completed={task.completed}\r\n      key={task.id}\r\n      toggleTaskCompleted={toggleTaskCompleted}\r\n      deleteTask={deleteTask}\r\n      editTask={editTask}\r\n    />\r\n  ));\r\n\r\n  const filterList = FILTER_NAMES.map((name) => (\r\n    <FilterButton\r\n      key={name}\r\n      name={name}\r\n      isPressed={name === filter}\r\n      setFilter={setFilter}\r\n    />\r\n  ));\r\n\r\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\r\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n\r\n  return (\r\n    <div className=\"todoapp stack-large\">\r\n      <h1>Spaza Eats Kota Shop</h1>\r\n      <Form addTask={addTask} />\r\n      <div className=\"filters btn-group stack-exception\">{filterList}</div>\r\n      <h2 id=\"list-heading\">{headingText}</h2>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"todo-list stack-large stack-exception\"\r\n        aria-labelledby=\"list-heading\"\r\n      >\r\n        {taskList}\r\n      </ul>\r\n\r\n      {/* Here we are passing props /data */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,4BAA4B;AACrD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,UAAU,GAAG;EACjBC,GAAG,EAAEA,CAAA,KAAM,IAAI;EACfC,MAAM,EAAGC,IAAI,IAAK,CAACA,IAAI,CAACC,SAAS;EACjCC,SAAS,EAAGF,IAAI,IAAKA,IAAI,CAACC;AAC5B,CAAC;AAED,MAAME,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACR,UAAU,CAAC;AAACS,EAAA,GAAvCH,YAAY;AAElB,SAASI,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAExB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAACe,KAAK,CAACI,KAAK,IAAI,EAAE,CAAC;EAErD,SAASE,OAAOA,CAACC,IAAI,EAAE;IACrB,MAAMC,OAAO,GAAG;MAAEC,EAAE,EAAG,QAAOvB,MAAM,CAAC,CAAE,EAAC;MAAEqB,IAAI;MAAEd,SAAS,EAAE;IAAM,CAAC;IAClEY,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEI,OAAO,CAAC,CAAC;EAC/B;EAEA,SAASE,mBAAmBA,CAACD,EAAE,EAAE;IAC/B,MAAME,YAAY,GAAGP,KAAK,CAACQ,GAAG,CAAEpB,IAAI,IAAK;MACvC;MACA,IAAIiB,EAAE,KAAKjB,IAAI,CAACiB,EAAE,EAAE;QAClB;QACA;QACA,OAAO;UAAE,GAAGjB,IAAI;UAAEC,SAAS,EAAE,CAACD,IAAI,CAACC;QAAU,CAAC;MAChD;MACA,OAAOD,IAAI;IACb,CAAC,CAAC;IACFa,QAAQ,CAACM,YAAY,CAAC;EACxB;EAEA,SAASE,UAAUA,CAACJ,EAAE,EAAE;IACtB,MAAMK,cAAc,GAAGV,KAAK,CAACF,MAAM,CAAEV,IAAI,IAAKiB,EAAE,KAAKjB,IAAI,CAACiB,EAAE,CAAC;IAC7DJ,QAAQ,CAACS,cAAc,CAAC;EAC1B;EAEA,SAASC,QAAQA,CAACN,EAAE,EAAEO,OAAO,EAAE;IAC7B,MAAMC,cAAc,GAAGb,KAAK,CAACQ,GAAG,CAAEpB,IAAI,IAAK;MACzC;MACA,IAAIiB,EAAE,KAAKjB,IAAI,CAACiB,EAAE,EAAE;QAClB;QACA,OAAO;UAAE,GAAGjB,IAAI;UAAEe,IAAI,EAAES;QAAQ,CAAC;MACnC;MACA,OAAOxB,IAAI;IACb,CAAC,CAAC;IACFa,QAAQ,CAACY,cAAc,CAAC;EAC1B;EAEA,MAAMC,QAAQ,GAAGd,KAAK,CAACQ,GAAG,CAAEpB,IAAI,iBAC9BJ,OAAA,CAACL,IAAI;IACH0B,EAAE,EAAEjB,IAAI,CAACiB,EAAG;IACZF,IAAI,EAAEf,IAAI,CAACe,IAAK;IAChBd,SAAS,EAAED,IAAI,CAACC,SAAU;IAE1BiB,mBAAmB,EAAEA,mBAAoB;IACzCG,UAAU,EAAEA,UAAW;IACvBE,QAAQ,EAAEA;EAAS,GAHdvB,IAAI,CAACiB,EAAE;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIb,CACF,CAAC;EAEF,MAAMC,UAAU,GAAG5B,YAAY,CAACiB,GAAG,CAAEL,IAAI,iBACvCnB,OAAA,CAACP,YAAY;IAEX0B,IAAI,EAAEA,IAAK;IACXiB,SAAS,EAAEjB,IAAI,KAAKL,MAAO;IAC3BC,SAAS,EAAEA;EAAU,GAHhBI,IAAI;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIV,CACF,CAAC;EAEF,MAAMG,SAAS,GAAGP,QAAQ,CAACQ,MAAM,KAAK,CAAC,GAAG,OAAO,GAAG,MAAM;EAC1D,MAAMC,WAAW,GAAI,GAAET,QAAQ,CAACQ,MAAO,IAAGD,SAAU,YAAW;EAE/D,oBACErC,OAAA;IAAKwC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCzC,OAAA;MAAAyC,QAAA,EAAI;IAAoB;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BlC,OAAA,CAACN,IAAI;MAACwB,OAAO,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1BlC,OAAA;MAAKwC,SAAS,EAAC,mCAAmC;MAAAC,QAAA,EAAEN;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrElC,OAAA;MAAIqB,EAAE,EAAC,cAAc;MAAAoB,QAAA,EAAEF;IAAW;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxClC,OAAA;MACE0C,IAAI,EAAC,MAAM;MACXF,SAAS,EAAC,uCAAuC;MACjD,mBAAgB,cAAc;MAAAC,QAAA,EAE7BX;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGF,CAAC;AAEV;AAACrB,EAAA,CAlFQF,SAAS;AAAAgC,GAAA,GAAThC,SAAS;AAoFlB,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAiC,GAAA;AAAAC,YAAA,CAAAlC,EAAA;AAAAkC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}