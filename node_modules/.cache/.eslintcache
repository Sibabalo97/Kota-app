[{"C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\index.js":"1","C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\App.js":"2","C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\reportWebVitals.js":"3","C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\Dashboard\\Dashboard.js":"4","C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\Authication\\Login\\Register\\Register.js":"5","C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\Authication\\Login\\Login\\Login.js":"6","C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\Authication\\Login\\pages\\RegisterPage.js":"7","C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\components\\Todo.js":"8","C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\components\\Form.js":"9","C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\components\\FilterButton.js":"10"},{"size":552,"mtime":1706738293662,"results":"11","hashOfConfig":"12"},{"size":1945,"mtime":1706738293653,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1706738293667,"results":"14","hashOfConfig":"12"},{"size":2707,"mtime":1706738293658,"results":"15","hashOfConfig":"12"},{"size":2022,"mtime":1706738293656,"results":"16","hashOfConfig":"12"},{"size":1570,"mtime":1706738293655,"results":"17","hashOfConfig":"12"},{"size":162,"mtime":1706738293657,"results":"18","hashOfConfig":"12"},{"size":2219,"mtime":1706738293661,"results":"19","hashOfConfig":"12"},{"size":975,"mtime":1706738293661,"results":"20","hashOfConfig":"12"},{"size":344,"mtime":1706738293660,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nahe",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\index.js",[],[],"C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\App.js",[],[],"C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\Dashboard\\Dashboard.js",["55"],[],"\r\nimport FilterButton from '../components/FilterButton';\r\nimport Form from '../components/Form';\r\nimport Todo from \"../components/Todo\";\r\nimport React, { useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport './Dashboard.css';\r\n\r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: (task) => !task.completed,\r\n  Completed: (task) => task.completed,\r\n};\r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nfunction Dashboard(props) {\r\n\r\n  const [filter, setFilter] = useState(\"All\");\r\n\r\n\r\n  const [tasks, setTasks] = useState(props.tasks || []);\r\n\r\n  \r\n\r\n \r\n  function addTask(name) {\r\n    const newTask = { id: `todo-${nanoid()}`, name, completed: false };\r\n    setTasks([...tasks, newTask]);\r\n  }\r\n\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTasks = tasks.map((task) => {\r\n      // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        // use object spread to make a new object\r\n        // whose `completed` prop has been inverted\r\n        return { ...task, completed: !task.completed };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  }\r\n\r\n  function deleteTask(id) {\r\n    const remainingTasks = tasks.filter((task) => id !== task.id);\r\n  setTasks(remainingTasks);\r\n  }\r\n\r\n  function editTask(id, newName) {\r\n    const editedTaskList = tasks.map((task) => {\r\n      // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        //\r\n        return { ...task, name: newName };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(editedTaskList);\r\n  }\r\n  \r\n  const taskList = tasks.map((task) => (\r\n    <Todo\r\n      id={task.id}\r\n      name={task.name}\r\n      completed={task.completed}\r\n      key={task.id}\r\n      toggleTaskCompleted={toggleTaskCompleted}\r\n      deleteTask={deleteTask}\r\n      editTask ={editTask}\r\n    />\r\n  ));\r\n\r\n  const filterList = FILTER_NAMES.map((name) => (\r\n    <FilterButton\r\n      key={name}\r\n      name={name}\r\n      isPressed={name === filter}\r\n      setFilter={setFilter}\r\n    />\r\n  ));\r\n  \r\n  \r\n\r\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\r\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n  \r\n\r\n  return (\r\n    <div className=\"todoapp stack-large\">\r\n      <h1>Spaza Eats Kota Shop</h1>\r\n      <Form addTask={addTask} />\r\n      <div className=\"filters btn-group stack-exception\">\r\n      {filterList}\r\n\r\n      </div>\r\n      <h2 id=\"list-heading\">{headingText}</h2>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"todo-list stack-large stack-exception\"\r\n        aria-labelledby=\"list-heading\">\r\n        {taskList}\r\n      </ul>\r\n\r\n      {/* Here we are passing props /data */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\Authication\\Login\\Register\\Register.js",[],[],"C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\Authication\\Login\\Login\\Login.js",["56","57"],[],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    \r\n    navigate('/Dashboard');\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>Login</h1>\r\n      <button className=\"google-button\">Continue with Google</button>\r\n\r\n      <form>\r\n        <label>Username</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n\r\n        <label>Password</label>\r\n        <div className=\"password-input\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"remember-me\">\r\n          <input type=\"checkbox\" id=\"remember\" />\r\n          <label htmlFor=\"remember\">Remember me</label>\r\n        </div>\r\n\r\n        <button type=\"button\" onClick={handleLogin}>\r\n          Login\r\n        </button>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n      </form>\r\n\r\n      <p>\r\n        Don\"t have an account? <Link to=\"/register\">Sign up</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\Authication\\Login\\pages\\RegisterPage.js",[],[],"C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\components\\Todo.js",[],[],"C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\components\\Form.js",["58"],[],"import React, { useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nfunction Form(props) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n\r\n      const newTask = { id: `todo-${nanoid()}`, name, completed: false };\r\n      \r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form> \r\n  );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\Sibabalom\\Videos\\KotaRepoApp\\Kota-app\\src\\components\\FilterButton.js",[],[],{"ruleId":"59","severity":1,"message":"60","line":99,"column":7,"nodeType":"61","endLine":102,"endColumn":40},{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":9,"column":17,"nodeType":"64","messageId":"65","endLine":9,"endColumn":25},{"ruleId":"62","severity":1,"message":"67","line":16,"column":13,"nodeType":"64","messageId":"65","endLine":16,"endColumn":20},"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","'newTask' is assigned a value but never used."]